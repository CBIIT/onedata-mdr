--to compare run the next in Sprint 27
--delete from ONEDATA_REVERSE_ERROR;
--commit;
--exec SAG_AI_VALIDATION_REV;

--MODULES LST_UPD_DT
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 52 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='MODULE' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBREXT',AC_IDSEQ --Change
 , 52 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
PUBLIC_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBREXT.QUEST_CONTENTS_EXT	AC,  SBR.ADMINISTERED_COMPONENTS SB WHERE AC_IDSEQ = QC_IDSEQ AND ACTL_NAME = 'QUEST_CONTENT' AND QTL_NAME IN ('MODULE')
AND AC_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='MODULE' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ;


--FORM CHNG_DESC_TXT
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 54 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='FORM' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBREXT',AC_IDSEQ --Change
 , 54 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
PUBLIC_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBREXT.QUEST_CONTENTS_EXT	AC, SBR.ADMINISTERED_COMPONENTS SB WHERE AC_IDSEQ = QC_IDSEQ AND ACTL_NAME = 'QUEST_CONTENT' AND QTL_NAME IN ('TEMPLATE', 'CRF')
AND AC_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='FORM' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--DATA ELEMENT LST_UPD_DT, CHNG_DESC_TXT
select 'ONEDATA' TIER,NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 4 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='DATA ELEMENT' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',DE_IDSEQ --Change
 , 4 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
CDE_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBR.DATA_ELEMENTS AC
WHERE DE_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='DATA ELEMENT' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ;

--DATA ELEMENT CONCEPT CHNG_DESC_TXT
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 2 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='DATA ELEMENT CONCEPT' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',DEC_IDSEQ --Change
 , 2 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
DEC_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBR.DATA_ELEMENT_CONCEPTS AC
WHERE DEC_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='DATA ELEMENT CONCEPT' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ;

--VALUE DOMAIN LST_UPD_DT, CHNG_DESC_TXT
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 3 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='VALUE DOMAIN' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',VD_IDSEQ --Change
 , 3 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
VD_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBR.VALUE_DOMAINS AC
WHERE VD_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='VALUE DOMAIN' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ;

--OCRECS - OK
select 'ONEDATA' TIER,NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 56 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
 and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='OCRECS' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',AC_IDSEQ , 56 ,SB.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, PUBLIC_ID ,
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(SB.CREATED_BY,'ONEDATA'), NVL(SB.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(SB.DATE_MODIFIED, SB.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(SB.MODIFIED_BY,'ONEDATA')
FROM SBR.ADMINISTERED_COMPONENTS AC , SBREXT.OC_RECS_EXT SB WHERE AC.AC_IDSEQ=SB.OCR_IDSEQ AND ACTL_NAME = 'OBJECTRECS'
and ac_idseq IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='OCRECS' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ;

--CONCEPTUAL DOMAIN OK
select 'ONEDATA' TIER,NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 1 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
 and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CONCEPTUAL DOMAIN' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',AC_IDSEQ , 1 ,SB.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, PUBLIC_ID ,
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(SB.CREATED_BY,'ONEDATA'), NVL(SB.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(SB.DATE_MODIFIED, SB.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(SB.MODIFIED_BY,'ONEDATA')
FROM SBR.ADMINISTERED_COMPONENTS AC , SBR.CONCEPTUAL_DOMAINS SB WHERE AC.AC_IDSEQ=SB.CD_IDSEQ AND ACTL_NAME = 'CONCEPTUALDOMAIN'
and ac_idseq IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CONCEPTUAL DOMAIN' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--OBJECT CLASS different length in ITEM_DESC as SBREXT  including ... not all objects in SBREXT
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 5 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='OBJECT CLASS' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBREXT',OC_IDSEQ --Change
 , 5 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
OC_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBREXT.OBJECT_CLASSES_EXT AC
WHERE OC_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='OBJECT CLASS' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--PROPERTY different length in ITEM_DESC as SBREXT  including ... not all objects in SBREXT
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 6 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='PROPERTY' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBREXT',PROP_IDSEQ --Change
 , 6 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
PROP_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBREXT.PROPERTIES_EXT AC
WHERE PROP_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='PROPERTY' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--CLASSIFICATION SCHEME ITEM
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 51 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CLASSIFICATION SCHEME ITEM' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',CSI_IDSEQ --Change
 , 51 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
CSI_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBR.CS_ITEMS AC
WHERE CSI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CLASSIFICATION SCHEME ITEM' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ;

--CLASSIFICATION SCHEME ITEM not found
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 51 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CLASSIFICATION SCHEME ITEM' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',CSI_IDSEQ --Change
 , 51 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
CSI_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBR.CS_ITEMS AC
WHERE CSI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CLASSIFICATION SCHEME ITEM' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--PROTOCOL
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 50 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='PROTOCOL' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBREXT',AC_IDSEQ --Change
 , 50 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
PUBLIC_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBREXT.PROTOCOLS_EXT	AC,  SBR.ADMINISTERED_COMPONENTS  SB WHERE AC_IDSEQ = PROTO_IDSEQ AND ACTL_NAME = 'PROTOCOL'
AND AC_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='PROTOCOL' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--CLASSIFICATION SCHEME origin, CHNG_DESC_TXT, a new object not found 
select 'ONEDATA' TIER,NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 9 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
 and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CLASSIFICATION SCHEME' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',AC_IDSEQ , 9 ,SB.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, PUBLIC_ID ,
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(SB.CREATED_BY,'ONEDATA'), NVL(SB.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(SB.DATE_MODIFIED, SB.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(SB.MODIFIED_BY,'ONEDATA')
FROM SBR.ADMINISTERED_COMPONENTS AC , SBR.CLASSIFICATION_SCHEMES SB WHERE AC.AC_IDSEQ=SB.CS_IDSEQ AND ACTL_NAME = 'CLASSIFICATION'
and ac_idseq IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CLASSIFICATION SCHEME' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--PROTOCOL OK
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 50 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='PROTOCOL' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBREXT',AC_IDSEQ --Change
 , 50 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
PUBLIC_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBREXT.PROTOCOLS_EXT	AC,  SBR.ADMINISTERED_COMPONENTS  SB WHERE AC_IDSEQ = PROTO_IDSEQ AND ACTL_NAME = 'PROTOCOL'
AND AC_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='PROTOCOL' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--VALUE MEANING mo new OD items, ITEM_DESC as SBR  an URI  ... not all objects in SBREXT
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 53 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='VALUE MEANING' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBR',VM_IDSEQ --Change
 , 53 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
VM_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBR.VALUE_MEANINGS AC
WHERE VM_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='VALUE MEANING'  and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

-- Validate Context 
SELECT 'ONEDATA' TIER, admin_item_typ_id,
                               NCI_iDSEQ,
                               ITEM_DESC,
                               ITEM_NM,
                               ITEM_LONG_NM,
                               VER_NR,
                               CNTXT_NM_DN,
                               CREAT_USR_ID,
                               CREAT_DT,
                               LST_UPD_DT,
                               LST_UPD_USR_ID
                          FROM ONEDATA_WA.ADMIN_ITEM
                         WHERE ADMIN_ITEM_TYP_ID = '8'
                        and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CONTEXTS' and DESTINATION='ADMIN_ITEM')
                        UNION ALL
                        SELECT 'SBR' TIER, 8,
                               TRIM (conte_idseq),
                               description,
                               name,
                               name,
                               version,
                               name,
                               NVL(created_by,'ONEDATA'),
                               NVL(date_created,to_date('8/18/2020','mm/dd/yyyy')),
                               NVL(NVL (date_modified, date_created),to_date('8/18/2020','mm/dd/yyyy')),
                               NVL(modified_by,'ONEDATA')
                          FROM SBR.CONTEXTS AC
                          WHERE conte_idseq IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CONTEXTS' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;

--CONCEPT
select 'ONEDATA' TIER, NCI_IDSEQ, ADMIN_ITEM_TYP_ID,EFF_DT,CHNG_DESC_TXT,UNTL_DT,CURRNT_VER_IND,ITEM_LONG_NM,
CASE WHEN ORIGIN_ID IS NULL 
THEN ORIGIN 
ELSE ORIGIN_ID_DN END ORIGIN,
ITEM_DESC,ITEM_ID,ITEM_NM,VER_NR,CREAT_USR_ID,CREAT_DT,LST_UPD_DT,LST_UPD_USR_ID
 from ONEDATA_WA.ADMIN_ITEM
 where ADMIN_ITEM_TYP_ID = 49 and item_id not in (-20000,-20001,-20002,-20005,-20004,-20003)
  and NCI_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CONCEPT' and DESTINATION='ADMIN_ITEM')
 UNION ALL
 select 'SBREXT',CON_IDSEQ --Change
 , 49 ,AC.BEGIN_DATE,AC.CHANGE_NOTE,AC.END_DATE,
DECODE(UPPER(AC.LATEST_VERSION_IND),'YES', 1,'NO',0) LATEST_VERSION_IND,AC.PREFERRED_NAME,
AC.ORIGIN,AC.PREFERRED_DEFINITION, 
CON_ID, --Change
SUBSTR(NVL(AC.LONG_NAME,AC.PREFERRED_NAME),0,255),AC.VERSION,
NVL(AC.CREATED_BY,'ONEDATA'), NVL(AC.DATE_CREATED,to_date('8/18/2020','mm/dd/yyyy')),
NVL(NVL(AC.DATE_MODIFIED, AC.DATE_CREATED),to_date('8/18/2020','mm/dd/yyyy')), NVL(AC.MODIFIED_BY,'ONEDATA')
FROM SBREXT.CONCEPTS_EXT AC
WHERE CON_IDSEQ IN (select IDSEQ from ONEDATA_REVERSE_ERROR
where ACTL_NAME='CONCEPT' and DESTINATION='ADMIN_ITEM')
order by NCI_IDSEQ, tier;
